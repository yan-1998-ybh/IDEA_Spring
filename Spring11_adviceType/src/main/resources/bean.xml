<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的Ioc，把service对象配置进来-->
    <bean id="accountService" class="com.itybh.service.impl.AccountServiceImpl"></bean>


    <!--配置Logger类-->
    <bean id="logger" class="com.itybh.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <!--配置切入点表达式 id属性用于指定表达式的唯一标识 expression属性用于指定表达式是内容
               此标签写在aop:aspect标签内部只能当前切面使用。
               它还可以写在aop:aspect外面，此时就变成了所有切面可用
           -->
        <aop:pointcut id="ptl" expression="execution( * com.itybh.service.impl.*.*(..))"></aop:pointcut>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知:在切入点方法执行之前执行
            <aop:before method="beforePrintLog" pointcut-ref="ptl"></aop:before>-->

            <!--配置后置通知：在切入点方法正常执行之后执行，他和异常通知永远只能执行一个
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="ptl"></aop:after-returning>-->

            <!--配置前置通知：在切入点方法执行产生异常之后执行，他和后常通知永远只能执行一个
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="ptl"></aop:after-throwing>-->

            <!--配置前置通知：无论切入点方法是否执行他都会在其后面执行
            <aop:after method="afterPrintLog" pointcut-ref="ptl"></aop:after>-->

            <!--配置环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="ptl"></aop:around>

        </aop:aspect>

    </aop:config>
</beans>